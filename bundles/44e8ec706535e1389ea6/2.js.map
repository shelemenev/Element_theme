{"version":3,"sources":["webpack:///./matrix-react-sdk/src/effects/rainfall/index.ts"],"names":["DefaultOptions","maxCount","speed","KEY_FRAME_INTERVAL","Rainfall","constructor","options","canvas","timeout","context","getContext","particles","count","length","push","resetParticle","width","height","isRunning","requestAnimationFrame","renderLoop","window","setTimeout","stop","particle","x","Math","random","y","clearRect","timeDelta","Date","now","lastAnimationTime","animateAndRenderRaindrops","arrayFastClone","save","beginPath","rect","fillStyle","fill","closePath","restore","maxBounds","idx","indexOf","splice"],"mappings":"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","file":"bundles/44e8ec706535e1389ea6/2.js","sourcesContent":["/*\n Copyright 2020 The Matrix.org Foundation C.I.C.\n Copyright 2021 Josias Allestad\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\nimport ICanvasEffect from '../ICanvasEffect';\nimport { arrayFastClone } from \"../../utils/arrays\";\n\nexport type RainfallOptions = {\n    /**\n     * The maximum number of raindrops to render at a given time\n     */\n    maxCount: number;\n    /**\n     * The speed of the raindrops\n     */\n    speed: number;\n};\n\ntype Raindrop = {\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    speed: number;\n};\n\nexport const DefaultOptions: RainfallOptions = {\n    maxCount: 600,\n    speed: 12,\n};\n\nconst KEY_FRAME_INTERVAL = 15;\n\nexport default class Rainfall implements ICanvasEffect {\n    private readonly options: RainfallOptions;\n\n    constructor(options: { [key: string]: any }) {\n        this.options = { ...DefaultOptions, ...options };\n    }\n\n    private context: CanvasRenderingContext2D | null = null;\n    private particles: Array<Raindrop> = [];\n    private lastAnimationTime: number;\n\n    public isRunning: boolean;\n\n    public start = async (canvas: HTMLCanvasElement, timeout = 3000) => {\n        if (!canvas) {\n            return;\n        }\n        this.context = canvas.getContext('2d');\n        this.particles = [];\n        const count = this.options.maxCount;\n        while (this.particles.length < count) {\n            this.particles.push(this.resetParticle({} as Raindrop, canvas.width, canvas.height));\n        }\n        this.isRunning = true;\n        requestAnimationFrame(this.renderLoop);\n        if (timeout) {\n            window.setTimeout(this.stop, timeout);\n        }\n    };\n\n    public stop = async () => {\n        this.isRunning = false;\n    };\n\n    private resetParticle = (particle: Raindrop, width: number, height: number): Raindrop => {\n        particle.x = Math.random() * width;\n        particle.y = Math.random() * -height;\n        particle.width = Math.random() * 1.5;\n        particle.height = (particle.width * 15) + 4;\n        particle.speed = (Math.random() * this.options.speed * 4/5) + this.options.speed;\n        return particle;\n    };\n\n    private renderLoop = (): void => {\n        if (!this.context || !this.context.canvas) {\n            return;\n        }\n        if (this.particles.length === 0) {\n            this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n        } else {\n            const timeDelta = Date.now() - this.lastAnimationTime;\n            if (timeDelta >= KEY_FRAME_INTERVAL || !this.lastAnimationTime) {\n                // Clear the screen first\n                this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n                this.lastAnimationTime = Date.now();\n                this.animateAndRenderRaindrops();\n            }\n            requestAnimationFrame(this.renderLoop);\n        }\n    };\n\n    private animateAndRenderRaindrops = (): void => {\n        if (!this.context || !this.context.canvas) {\n            return;\n        }\n        const height = this.context.canvas.height;\n        for (const particle of arrayFastClone(this.particles)) {\n            particle.y += particle.speed;\n\n            this.context.save();\n            this.context.beginPath();\n            this.context.rect(particle.x, particle.y, particle.width, particle.height);\n            this.context.fillStyle = '#5dadec'; // light blue\n            this.context.fill();\n            this.context.closePath();\n            this.context.restore();\n\n            // Remove dead raindrops\n            const maxBounds = height * 2;\n            if (particle.y > (height + maxBounds)) {\n                const idx = this.particles.indexOf(particle);\n                this.particles.splice(idx, 1);\n            }\n        }\n    };\n}\n"],"sourceRoot":""}